{"ast":null,"code":"import { Loader } from '@googlemaps/js-api-loader';\nimport { Validators } from '@angular/forms';\nimport { Formulario } from '../app/_model/Formulario';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./form-component/form-component.component\";\nimport * as i5 from \"./navbar/navbar.component\";\nfunction AppComponent_form_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 12)(1, \"div\", 13)(2, \"label\", 14)(3, \"b\");\n    i0.ɵɵtext(4, \"How to add a Run to the map:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"ol\")(6, \"li\");\n    i0.ɵɵtext(7, \"Click on the location of your run.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"li\");\n    i0.ɵɵtext(9, \"Share your experience in the text box below.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"li\");\n    i0.ɵɵtext(11, \"Click the 'Save' button.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 15)(13, \"textarea\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_form_13_Template_textarea_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.formulario.mensaje = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function AppComponent_form_13_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.guardar());\n    });\n    i0.ɵɵtext(15, \"Save\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.formulario.mensaje);\n  }\n}\nfunction AppComponent_ng_container_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"app-form-component\", 18);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"marker\", ctx_r1.selectedMarker);\n  }\n}\nexport class AppComponent {\n  constructor(http, formBuilder) {\n    this.http = http;\n    this.formBuilder = formBuilder;\n    this.formulario = new Formulario();\n    this.title = 'ohmyrun_frontend';\n    this.habilitarMensaje = false;\n    this.markers = [];\n    this.mapMarkers = [];\n    this.buildForm();\n  }\n  buildForm() {\n    this.form = this.formBuilder.group({\n      mensaje: ['', [Validators.required, Validators.maxLength(100)]]\n    });\n  }\n  ngOnInit() {\n    let loader = new Loader({\n      apiKey: 'AIzaSyD_rpFGfqEPwCj-WYoFMRXse8QZdCheJEI'\n    });\n    loader.load().then(() => {\n      if (!navigator.geolocation) {}\n      navigator.geolocation.getCurrentPosition(position => {\n        const location = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        this.map = new google.maps.Map(document.getElementById('map'), {\n          center: location,\n          zoom: 15\n        });\n        this.displayMessage();\n        this.map.addListener('click', event => {\n          document.querySelector('#formelements')?.scrollIntoView();\n          if (event.latLng) {\n            this.latitude = event.latLng.lat(), this.longitude = event.latLng.lng();\n            // document.querySelector('#formelements')?.scrollIntoView()\n            this.habilitarMensaje = true;\n            this.addMarker(event.latLng, this.map);\n          }\n        });\n      });\n      this.getMarkers();\n      this.renderMarkers();\n    });\n  }\n  setSelectedMarker(marker) {\n    this.selectedMarker = marker;\n  }\n  guardar() {\n    this.saveMarkers();\n  }\n  addMarker(location, map) {\n    const marker = new google.maps.Marker({\n      position: location,\n      map: map\n    });\n    marker.addListener('click', () => {\n      this.setSelectedMarker(marker);\n    });\n  }\n  displayMessage() {\n    this.infoWindow = new google.maps.InfoWindow();\n    for (let i of this.markers) {\n      const position = new google.maps.LatLng(i.latitude, i.longitude);\n      const tempMarker = new google.maps.Marker({\n        position: position,\n        map: this.map\n      });\n      tempMarker.addListener('click', ((tempMarker, map, infoWindow) => {\n        return () => {\n          infoWindow.setContent('<p><b>Description</b> : ' + i.description + '</p>');\n          infoWindow.open(map, tempMarker);\n        };\n      })(tempMarker, this.map, this.infoWindow));\n      this.mapMarkers.push(tempMarker);\n    }\n  }\n  saveMarkers() {\n    const markerJson = {\n      latitude: this.latitude,\n      longitude: this.longitude,\n      description: this.formulario.mensaje\n    };\n    this.habilitarMensaje = false;\n    this.formulario.mensaje = \"\";\n    this.http.post('https://oh-my-run.herokuapp.com/pin', markerJson).subscribe({\n      next: data => {\n        this.getMarkers();\n        this.renderMarkers();\n      },\n      error: error => {\n        console.error('An error occurred while saving the markers to the database: ', error);\n        this.getMarkers();\n      }\n    });\n  }\n  getMarkers() {\n    this.http.get('https://oh-my-run.herokuapp.com/pin').subscribe({\n      next: data => {\n        this.markers = Array.prototype.slice.call(data);\n        this.renderMarkers();\n        this.displayMessage();\n      },\n      error: error => {\n        console.error('An error occurred while retrieving the markers from the database: ', error);\n      }\n    });\n  }\n  renderMarkers() {\n    this.markers.forEach(marker => {\n      const position = new google.maps.LatLng(marker.latitude, marker.longitude);\n      const newMarker = new google.maps.Marker({\n        position: position,\n        map: this.map\n      });\n      newMarker.addListener('click', () => {\n        this.setSelectedMarker(newMarker);\n      });\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 21,\n  vars: 2,\n  consts: [[1, \"parent\"], [1, \"header\"], [\"id\", \"first-header\"], [\"id\", \"second-header\"], [1, \"website-description\"], [1, \"flex\"], [\"id\", \"map\", 1, \"full\"], [1, \"form\"], [\"id\", \"formelements\", 3, \"formGroup\", 4, \"ngIf\"], [4, \"ngIf\"], [\"id\", \"footer\"], [1, \"copyrights\"], [\"id\", \"formelements\", 3, \"formGroup\"], [1, \"form-group\", \"row\"], [\"for\", \"mensaje\", 1, \"form-description\"], [1, \"col-sm-6\"], [\"type\", \"text\", \"name\", \"mensaje\", \"formControlName\", \"mensaje\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"savebutton\", \"role\", \"button\", 1, \"save-button\", 3, \"click\"], [3, \"marker\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"body\", 0)(1, \"header\")(2, \"h1\", 1)(3, \"span\", 2);\n      i0.ɵɵtext(4, \"OhMy\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"span\", 3);\n      i0.ɵɵtext(6, \"Run\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"main\")(8, \"p\", 4);\n      i0.ɵɵtext(9, \"Welcome! Save a location and Run the Map \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"section\", 5);\n      i0.ɵɵelement(11, \"div\", 6);\n      i0.ɵɵelementStart(12, \"div\", 7);\n      i0.ɵɵtemplate(13, AppComponent_form_13_Template, 16, 2, \"form\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(14, AppComponent_ng_container_14_Template, 2, 1, \"ng-container\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\");\n      i0.ɵɵelement(16, \"app-navbar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"footer\", 10)(18, \"div\", 11)(19, \"p\");\n      i0.ɵɵtext(20, \"\\u00A9 2023 Tatiana Obando, Carmen Vega, Melissa Pe\\u00F1a\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngIf\", ctx.habilitarMensaje);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedMarker);\n    }\n  },\n  dependencies: [i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName, i4.FormComponentComponent, i5.NavbarComponent],\n  styles: [\".full[_ngcontent-%COMP%] {\\n    width: 100vw;\\n    height: 100vh;\\n    border-radius: 10pt;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osYUFBYTtJQUNiLG1CQUFtQjtBQUN2QiIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsIHtcbiAgICB3aWR0aDogMTAwdnc7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB0O1xufVxuXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["Loader","Validators","Formulario","i0","AppComponent","constructor","http","formBuilder","buildForm","form","group","mensaje","required","maxLength","ngOnInit","loader","apiKey","load","then","navigator","geolocation","getCurrentPosition","position","location","lat","coords","latitude","lng","longitude","map","google","maps","Map","document","getElementById","center","zoom","displayMessage","addListener","event","querySelector","scrollIntoView","latLng","habilitarMensaje","addMarker","getMarkers","renderMarkers","setSelectedMarker","marker","selectedMarker","guardar","saveMarkers","Marker","infoWindow","InfoWindow","i","markers","LatLng","tempMarker","setContent","description","open","mapMarkers","push","markerJson","formulario","post","subscribe","next","data","error","console","get","Array","prototype","slice","call","forEach","newMarker","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/tatiobando/Developer/capstone/ohmyrun_frontend/src/app/app.component.ts","/Users/tatiobando/Developer/capstone/ohmyrun_frontend/src/app/app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Formulario } from '../app/_model/Formulario';\nimport { Marca } from '../app/_model/Marca';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  formulario: Formulario = new Formulario();\n  form: FormGroup;\n  title = 'ohmyrun_frontend';\n  latitude: number;\n  longitude: number;\n  habilitarMensaje: boolean = false;\n  map: google.maps.Map;\n  location: google.maps.LatLng;\n  markers: Marca[] = [];\n  infoWindow: google.maps.InfoWindow;\n  mapMarkers: any = [];\n\n\n  constructor(private http: HttpClient, private formBuilder: FormBuilder) {\n    this.buildForm();\n  }\n\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      mensaje: ['', [Validators.required, Validators.maxLength(100)]],\n    });\n  }\n\n  ngOnInit(): void {\n    let loader = new Loader({\n      apiKey: 'AIzaSyD_rpFGfqEPwCj-WYoFMRXse8QZdCheJEI',\n    });\n\n    loader.load().then(() => {\n      \n      if (!navigator.geolocation) {\n        \n      }\n      navigator.geolocation.getCurrentPosition((position) => {\n        \n        const location = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        };\n        this.map = new google.maps.Map(\n          document.getElementById('map') as HTMLElement,\n          {\n            center: location,\n            zoom: 15,\n          }\n        );\n        this.displayMessage();\n        \n        this.map.addListener('click', (event: google.maps.MapMouseEvent) => {\n          document.querySelector('#formelements')?.scrollIntoView()\n          \n          if (event.latLng) {\n            this.latitude = event.latLng.lat(),\n            this.longitude = event.latLng.lng();\n            // document.querySelector('#formelements')?.scrollIntoView()\n            this.habilitarMensaje = true;\n            this.addMarker(event.latLng, this.map);\n          }\n        \n        });\n      });\n    this.getMarkers();\n    this.renderMarkers();\n    });\n\n  }\n  selectedMarker: any;\n\n  setSelectedMarker(marker: google.maps.Marker) {\n    this.selectedMarker = marker;\n  }\n\n  guardar() {\n    this.saveMarkers();\n  }\n\n  addMarker(location: google.maps.LatLng, map: google.maps.Map) {\n    const marker = new google.maps.Marker({\n      position: location,\n      map: map,\n    });\n    marker.addListener('click', () => {\n      this.setSelectedMarker(marker);\n    });\n  }\n\n  displayMessage() {\n    this.infoWindow = new google.maps.InfoWindow();\n        for (let i of this.markers){\n        const position = new google.maps.LatLng(i.latitude, i.longitude);\n\n        const tempMarker = new google.maps.Marker({position: position, map: this.map});\n          tempMarker.addListener('click',((tempMarker, map, infoWindow) => {\n        return () => {\n        infoWindow.setContent('<p><b>Description</b> : ' + i.description +'</p>');\n        infoWindow.open(map, tempMarker);\n        }\n        })(tempMarker, this.map, this.infoWindow));\n        this.mapMarkers.push(tempMarker);\n        }\n  }\n\n  saveMarkers() {\n    const markerJson = {\n      latitude: this.latitude,\n      longitude: this.longitude,\n      description: this.formulario.mensaje,\n    };\n    this.habilitarMensaje = false;\n    this.formulario.mensaje = \"\";\n\n    this.http.post('https://oh-my-run.herokuapp.com/pin', markerJson).subscribe({\n      next: \n      (data) => {\n        this.getMarkers();\n        this.renderMarkers();\n      } ,\n      error: (error) => {\n        console.error(\n          'An error occurred while saving the markers to the database: ',\n          error\n        );\n        this.getMarkers();\n        \n      }\n    });\n  }\n  getMarkers() {\n    this.http.get('https://oh-my-run.herokuapp.com/pin').subscribe({\n      next: (data) => {\n        this.markers = Array.prototype.slice.call(data)\n        this.renderMarkers();\n        this.displayMessage();\n      },\n      error: (error) => {\n        console.error(\n          'An error occurred while retrieving the markers from the database: ',\n          error\n        );\n      },\n    });\n\n  }\n\n  renderMarkers() {\n    this.markers.forEach((marker) => {\n      const position = new google.maps.LatLng(marker.latitude, marker.longitude);\n      const newMarker = new google.maps.Marker({\n        position: position,\n        map: this.map,\n      });\n      newMarker.addListener('click', () => {\n        this.setSelectedMarker(newMarker);\n      });\n    });\n  }\n}\n","<body class=\"parent\">\n  <header>\n    <h1 class=\"header\"><span id=\"first-header\">OhMy</span><span id=\"second-header\">Run</span></h1>\n  </header>\n  <main>\n    <p class=\"website-description\">Welcome! Save a location and Run the Map </p>\n    <section class =\"flex\">\n      <div class=\"full\" id=\"map\">\n      </div>\n      <div class=\"form\">\n        <form id=\"formelements\" [formGroup]=\"form\" *ngIf=\"habilitarMensaje\">\n          <div class=\"form-group row\">\n            <label for=\"mensaje\" class=\"form-description\"><b>How to add a Run to the map:</b></label>\n              <ol>\n                <li>Click on the location of your run.</li>\n                <li>Share your experience in the text box below.</li>\n                <li>Click the 'Save' button.</li>\n              </ol>\n            <div class=\"col-sm-6\">\n              <textarea type=\"text\" class=\"form-control\" name=\"mensaje\" formControlName=\"mensaje\" required [(ngModel)]=\"formulario.mensaje\"></textarea>\n            </div>\n          </div>\n          <button id=\"savebutton\"class=\"save-button\" role=\"button\" (click)='guardar()' >Save</button>\n        </form>\n      </div>\n    </section>\n    <ng-container *ngIf=\"selectedMarker\">\n      <app-form-component [marker]=\"selectedMarker\"></app-form-component>\n    </ng-container>\n  </main>\n  <div><app-navbar></app-navbar></div>\n\n  <footer id=\"footer\">\n  <div class=\"copyrights\">\n    <p>&copy; 2023 Tatiana Obando, Carmen Vega, Melissa Peña</p>\n  </div>\n  </footer>\n</body>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}